//! Autogenerated weights for pallet_ico
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-04-15, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("kico"), DB CACHE: 1024

// Executed Command:
// target/release/dico benchmark --chain=kico --execution=wasm --wasm-execution=compiled --pallet=pallet_ico --extrinsic=*  --steps=50 --repeat=20 --template=./.maintain/pallet-weight-template.hbs --output ./pallets/ico/src/weights.rs
//
// #![cfg_attr(rustfmt, rustfmt_skip)]
// #![allow(unused_parens)]
// #![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_ico.
pub trait WeightInfo {
	fn initiate_ico() -> Weight;
	fn permit_ico() -> Weight;
	fn reject_ico() -> Weight;
	fn join() -> Weight;
	fn terminate_ico() -> Weight;
	fn request_release() -> Weight;
	fn cancel_request() -> Weight;
	fn permit_release() -> Weight;
	fn user_release_ico_amount() -> Weight;
	fn unlock() -> Weight;
	fn set_system_ico_amount_bound() -> Weight;
	fn initiator_set_ico_amount_bound() -> Weight;
	fn initiator_set_ico_max_times() -> Weight;
	fn get_reward() -> Weight;
	fn set_asset_power_multiple() -> Weight;
}

/// Weights for pallet_ico using the Substrate node and recommended hardware.
pub struct DicoWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for DicoWeight<T> {
	// Storage: Ico IcoMinUsdtAmount (r:1 w:0)
	// Storage: Ico IcoMaxUsdtAmount (r:1 w:0)
	// Storage: Ico PendingIco (r:1 w:1)
	// Storage: Currencies DicoAssetsInfo (r:2 w:0)
	// Storage: Ico TotalNum (r:1 w:1)
	// Storage: Tokens Accounts (r:1 w:1)
	// Storage: Kyc KYCOf (r:1 w:0)
	// Storage: Ico InitiatedIcoesOf (r:1 w:1)
	fn initiate_ico() -> Weight {
		(116_692_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(9 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Ico PendingIco (r:1 w:1)
	// Storage: Tokens Accounts (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: Ico Indexs (r:1 w:1)
	// Storage: Ico InitiatedIcoesOf (r:1 w:1)
	// Storage: Ico PassedIcoes (r:1 w:1)
	// Storage: Ico Ico (r:0 w:1)
	// Storage: Ico IsUnservePledge (r:0 w:1)
	fn permit_ico() -> Weight {
		(114_423_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(9 as Weight))
	}
	// Storage: Ico PendingIco (r:1 w:1)
	// Storage: Tokens Accounts (r:1 w:1)
	// Storage: Ico InitiatedIcoesOf (r:1 w:1)
	fn reject_ico() -> Weight {
		(86_763_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Ico Ico (r:1 w:1)
	// Storage: Currencies DicoAssetsInfo (r:1 w:0)
	// Storage: Ico PowerMultipleOf (r:1 w:0)
	// Storage: Ico UnReleaseAssets (r:2 w:2)
	// Storage: Ico IcoMinUsdtAmount (r:1 w:0)
	// Storage: Ico IcoMaxUsdtAmount (r:1 w:0)
	// Storage: Tokens Accounts (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: Ico IcoesOf (r:1 w:1)
	// Storage: Ico TotalPowerOf (r:1 w:1)
	fn join() -> Weight {
		(181_246_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(12 as Weight))
			.saturating_add(T::DbWeight::get().writes(8 as Weight))
	}
	// Storage: Ico Ico (r:1 w:1)
	// Storage: Ico PassedIcoes (r:1 w:1)
	fn terminate_ico() -> Weight {
		(41_153_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Ico Ico (r:1 w:0)
	// Storage: Ico RequestReleaseInfo (r:1 w:1)
	fn request_release() -> Weight {
		(57_942_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Ico Ico (r:1 w:0)
	// Storage: Ico RequestReleaseInfo (r:1 w:1)
	fn cancel_request() -> Weight {
		(75_483_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Ico Ico (r:1 w:1)
	// Storage: Ico RequestReleaseInfo (r:1 w:1)
	fn permit_release() -> Weight {
		(61_942_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Ico Ico (r:1 w:0)
	// Storage: Ico IsUnservePledge (r:1 w:1)
	// Storage: Ico UnReleaseAssets (r:2 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Ico IcoLocks (r:1 w:1)
	fn user_release_ico_amount() -> Weight {
		(110_924_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Ico IcoLocks (r:1 w:1)
	fn unlock() -> Weight {
		(19_249_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Ico IcoMaxUsdtAmount (r:0 w:1)
	// Storage: Ico IcoMinUsdtAmount (r:0 w:1)
	fn set_system_ico_amount_bound() -> Weight {
		(17_552_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Ico Ico (r:1 w:1)
	// Storage: Ico IcoMinUsdtAmount (r:1 w:0)
	// Storage: Ico IcoMaxUsdtAmount (r:1 w:0)
	fn initiator_set_ico_amount_bound() -> Weight {
		(41_511_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Ico Ico (r:1 w:1)
	fn initiator_set_ico_max_times() -> Weight {
		(34_061_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Ico Ico (r:1 w:1)
	// Storage: Ico TotalUsdt (r:1 w:1)
	// Storage: Ico UnReleaseAssets (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn get_reward() -> Weight {
		(81_882_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Ico PowerMultipleOf (r:1 w:1)
	fn set_asset_power_multiple() -> Weight {
		(20_580_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: Ico IcoMinUsdtAmount (r:1 w:0)
	// Storage: Ico IcoMaxUsdtAmount (r:1 w:0)
	// Storage: Ico PendingIco (r:1 w:1)
	// Storage: Currencies DicoAssetsInfo (r:2 w:0)
	// Storage: Ico TotalNum (r:1 w:1)
	// Storage: Tokens Accounts (r:1 w:1)
	// Storage: Kyc KYCOf (r:1 w:0)
	// Storage: Ico InitiatedIcoesOf (r:1 w:1)
	fn initiate_ico() -> Weight {
		(116_692_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(9 as Weight))
			.saturating_add(RocksDbWeight::get().writes(4 as Weight))
	}
	// Storage: Ico PendingIco (r:1 w:1)
	// Storage: Tokens Accounts (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: Ico Indexs (r:1 w:1)
	// Storage: Ico InitiatedIcoesOf (r:1 w:1)
	// Storage: Ico PassedIcoes (r:1 w:1)
	// Storage: Ico Ico (r:0 w:1)
	// Storage: Ico IsUnservePledge (r:0 w:1)
	fn permit_ico() -> Weight {
		(114_423_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(7 as Weight))
			.saturating_add(RocksDbWeight::get().writes(9 as Weight))
	}
	// Storage: Ico PendingIco (r:1 w:1)
	// Storage: Tokens Accounts (r:1 w:1)
	// Storage: Ico InitiatedIcoesOf (r:1 w:1)
	fn reject_ico() -> Weight {
		(86_763_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	// Storage: Ico Ico (r:1 w:1)
	// Storage: Currencies DicoAssetsInfo (r:1 w:0)
	// Storage: Ico PowerMultipleOf (r:1 w:0)
	// Storage: Ico UnReleaseAssets (r:2 w:2)
	// Storage: Ico IcoMinUsdtAmount (r:1 w:0)
	// Storage: Ico IcoMaxUsdtAmount (r:1 w:0)
	// Storage: Tokens Accounts (r:2 w:2)
	// Storage: System Account (r:1 w:1)
	// Storage: Ico IcoesOf (r:1 w:1)
	// Storage: Ico TotalPowerOf (r:1 w:1)
	fn join() -> Weight {
		(181_246_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(12 as Weight))
			.saturating_add(RocksDbWeight::get().writes(8 as Weight))
	}
	// Storage: Ico Ico (r:1 w:1)
	// Storage: Ico PassedIcoes (r:1 w:1)
	fn terminate_ico() -> Weight {
		(41_153_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: Ico Ico (r:1 w:0)
	// Storage: Ico RequestReleaseInfo (r:1 w:1)
	fn request_release() -> Weight {
		(57_942_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Ico Ico (r:1 w:0)
	// Storage: Ico RequestReleaseInfo (r:1 w:1)
	fn cancel_request() -> Weight {
		(75_483_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Ico Ico (r:1 w:1)
	// Storage: Ico RequestReleaseInfo (r:1 w:1)
	fn permit_release() -> Weight {
		(61_942_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: Ico Ico (r:1 w:0)
	// Storage: Ico IsUnservePledge (r:1 w:1)
	// Storage: Ico UnReleaseAssets (r:2 w:1)
	// Storage: System Account (r:1 w:1)
	// Storage: Ico IcoLocks (r:1 w:1)
	fn user_release_ico_amount() -> Weight {
		(110_924_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(6 as Weight))
			.saturating_add(RocksDbWeight::get().writes(4 as Weight))
	}
	// Storage: Ico IcoLocks (r:1 w:1)
	fn unlock() -> Weight {
		(19_249_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Ico IcoMaxUsdtAmount (r:0 w:1)
	// Storage: Ico IcoMinUsdtAmount (r:0 w:1)
	fn set_system_ico_amount_bound() -> Weight {
		(17_552_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	// Storage: Ico Ico (r:1 w:1)
	// Storage: Ico IcoMinUsdtAmount (r:1 w:0)
	// Storage: Ico IcoMaxUsdtAmount (r:1 w:0)
	fn initiator_set_ico_amount_bound() -> Weight {
		(41_511_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Ico Ico (r:1 w:1)
	fn initiator_set_ico_max_times() -> Weight {
		(34_061_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: Ico Ico (r:1 w:1)
	// Storage: Ico TotalUsdt (r:1 w:1)
	// Storage: Ico UnReleaseAssets (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn get_reward() -> Weight {
		(81_882_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(4 as Weight))
	}
	// Storage: Ico PowerMultipleOf (r:1 w:1)
	fn set_asset_power_multiple() -> Weight {
		(20_580_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
}
//! Autogenerated weights for pallet_oracle
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-04-15, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("kico"), DB CACHE: 1024

// Executed Command:
// target/release/dico
// benchmark
// --chain=kico
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_oracle
// --extrinsic=*
// --steps=50
// --repeat=20
// --template=./.maintain/pallet-weight-template.hbs
// --output
// ./pallets/oracle/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_oracle.
pub trait WeightInfo {
	fn feed_values() -> Weight;
}

/// Weights for pallet_oracle using the Substrate node and recommended hardware.
pub struct DicoWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for DicoWeight<T> {
	// Storage: DicoOracle Members (r:1 w:0)
	// Storage: DicoOracle HasDispatched (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: DicoOracle OrcleKeys (r:1 w:1)
	// Storage: DicoOracle RawValues (r:0 w:1)
	// Storage: DicoOracle IsUpdated (r:0 w:1)
	fn feed_values() -> Weight {
		(37_642_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: DicoOracle Members (r:1 w:0)
	// Storage: DicoOracle HasDispatched (r:1 w:1)
	// Storage: Timestamp Now (r:1 w:0)
	// Storage: DicoOracle OrcleKeys (r:1 w:1)
	// Storage: DicoOracle RawValues (r:0 w:1)
	// Storage: DicoOracle IsUpdated (r:0 w:1)
	fn feed_values() -> Weight {
		(37_642_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(4 as Weight))
	}
}
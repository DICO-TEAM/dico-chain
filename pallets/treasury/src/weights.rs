
//! Autogenerated weights for `pallet_dico_treasury`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-01-27, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("kico"), DB CACHE: 128

// Executed Command:
// ./target/release/dico
// benchmark
// --execution
// Wasm
// --wasm-execution
// compiled
// --pallet
// pallet_dico_treasury
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --raw
// --output
// ./pallets/treasury/src/weights.rs
// --chain
// kico

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_dico_treasury`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_dico_treasury::WeightInfo for WeightInfo<T> {
	// Storage: DicoTreasury ProposalCount (r:1 w:1)
	// Storage: DicoTreasury Proposals (r:0 w:1)
	fn propose_spend() -> Weight {
		(24_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: DicoTreasury Proposals (r:1 w:1)
	fn reject_proposal() -> Weight {
		(26_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: DicoTreasury Proposals (r:1 w:1)
	// Storage: DicoTreasury Approvals (r:1 w:1)
	fn approve_proposal() -> Weight {
		(17_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: DicoTreasury Approvals (r:1 w:1)
	// Storage: DicoTreasury Proposals (r:1 w:0)
	fn spend_fund() -> Weight {
		(16_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
